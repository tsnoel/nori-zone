$page-background: #FBFBFB;

$generic-card: #FFFFFF;
$secondary-text: #666666;

$colors: (
    brightBlue: (
        50: #e0f4fe,
        100: #b2e3fd,
        200: #7ed0fb,
        300: #4abef7,
        400: #20b0f6,
        500: #00a2f3,
        600: #0095e4,
        700: #0082d0,
        800: #0071bc,
        900: #03519a
    ),
    paleBlue: (
        50: #e4f3ff,
        100: #bee0ff,
        200: #95cdff,
        300: #6bb9ff,
        400: #4ea9ff,
        500: #399aff,
        600: #398bf7,
        700: #3779e3,
        800: #3467d0,
        900: #2f47b1
    ),
    brown: (
        50: #ffe3ce,
        100: #eec1ae,
        200: #cf9d89,
        300: #ae7962,
        400: #975e46,
        500: #7f442b,
        600: #733b25,
        700: #642f1c,
        800: #552316,
        900: #45150b
    ),
    ming: (
        25: #e4f8fa,
        50: #95e1eb,
        100: #76d4e1,
        150: #6fcfdd,
        200: #68cad9,
        250: #66c5d5,
        300: #65c1d2,
        350: #61b8c8,
        400: #5eb0bf,
        450: #5aa5b2,
        500: #569ba5,
        550: #539199,
        600: #50878e,
        650: #4d7f84,
        700: #3f6f76,
        750: #326068,
        800: #205e6d,
        850: #185361,
        900: #104956,
        950: #09343e,
        1000: #082d35
    ),
    pink: (
        50: #f2e2ed,
        100: #e1b6d4,
        200: #d088b7,
        300: #c25b9b,
        400: #ba3b85,
        500: #b51770,
        600: #a5186a,
        700: #901962,
        800: #7a1859,
        900: #551648
    ),
    yellow: (
        50: #fbfce7,
        100: #f6f5c3,
        200: #f1ef9c,
        300: #ece875,
        400: #e9e459,
        500: #e6df3e,
        600: #e5ce37,
        700: #e3b72d,
        800: #e0a023,
        900: #dc7a0c
    ),
    red: (
        50: #f7e6e8,
        100: #ebc1c3,
        200: #ce8784,
        300: #b75b57,
        400: #b83933,
        500: #b42416,
        600: #a71b17,
        700: #971112,
        800: #8a0a0c,
        900: #7b0000
    ),
    redorange: (
        50: #fae9e7,
        100: #fdcbbd,
        200: #fcaa92,
        300: #fc8967,
        400: #fb6f46,
        500: #fb5527,
        600: #f04f23,
        700: #e2491e,
        800: #d4421a,
        900: #bb3512
    ),
    orange: (
        50: #fdf2e2,
        100: #fbdeb7,
        200: #f9c989,
        300: #f6b45d,
        400: #f4a440,
        500: #f3952b,
        600: #ee8a29,
        700: #e87b25,
        800: #e16c22,
        900: #d7541c
    ),
    green: (
        50: #f2f9e9,
        100: #dfefc7,
        200: #cae4a3,
        300: #b4d97d,
        400: #a3d05f,
        500: #92c842,
        600: #83b83a,
        700: #6ea430,
        800: #5a9027,
        900: #356e14
    ),
    purple: (
        50: #f2e6f1,
        100: #dfc1dd,
        200: #cb99c7,
        300: #b573b0,
        400: #a5589f,
        500: #983e92,
        600: #8c398c,
        700: #7c3283,
        800: #6e2c7b,
        900: #55216d
    ),
    slate: (
        50: #e3eceb,
        75: #cfdedb,
        100: #bbd0cc,
        150: #a7c1bc,
        200: #94b3ad,
        250: #80a59d,
        300: #6d978e,
        350: #5f8e84,
        400: #52857a,
        450: #497b70,
        500: #407266,
        550: #3d6c60,
        600: #3b665b,
        650: #375f54,
        700: #34584e,
        750: #305047,
        800: #2d4940,
        850: #263c34,
        900: #1f2f29
    ),
    teal: (
        50: #e1f7fe,
        100: #b4ecfa,
        200: #82e0f7,
        300: #4ed4f2,
        400: #25caec,
        500: #02bfe7,
        600: #00b1d3,
        700: #009cb8,
        800: #00889f,
        900: #006572,
    ),
    charcoal: (
        50: #f5f5f5,
        75: #efefef,
        100: #e9e9e9,
        150: #e1e1e1,
        200: #d9d9d9,
        250: #cecece,
        300: #c4c4c4,
        350: #b1b1b1,
        400: #9e9e9e,
        450: #8d8d8d,
        500: #7c7c7c,
        550: #696969,
        600: #565656,
        650: #4d4d4d,
        700: #444444,
        725: #3a3a3a,
        750: #353535,
        775: #2d2d2d,
        800: #272727,
        825: #1d1d1d,
        850: #141414,
        900: #010101
    ),
    gray: (
        25: #f3f3f3,
        50: #efefef,
        75: #e1e3e3,
        100: #d4d8d8,
        150: #d3dadc,
        200: #b4bfc0,
        250: #a4b2b3,
        300: #94a6a7,
        350: #889c9d,
        400: #7c9294,
        450: #70898b,
        500: #648082,
        550: #5e787a,
        600: #587172,
        650: #506667,
        700: #495c5d,
        750: #425253,
        800: #3b494a,
        850: #333e3f,
        900: #2b3434,
        950: #0a2b2b
    ),
    opaque: (
        50: rgba(255, 255, 255, 0.1),
        100: rgba(255, 255, 255, 0.2),
        200: rgba(255, 255, 255, 0.3),
        300: rgba(255, 255, 255, 0.4),
        400: rgba(255, 255, 255, 0.5),
        500: rgba(255, 255, 255, 0.6),
        600: rgba(255, 255, 255, 0.7),
        700: rgba(255, 255, 255, 0.8),
        800: rgba(255, 255, 255, 0.9),
        900: rgba(255, 255, 255, 1)
    ),
    black: black,
    white: white
);

$colors-map: (
    red: (
        lightest: map-get(map-get($colors, red), 100),
        lighter: map-get(map-get($colors, red), 200),
        light: map-get(map-get($colors, red), 400),
        base: map-get(map-get($colors, red), 500),
        dark: map-get(map-get($colors, red), 600),
        darker: map-get(map-get($colors, red), 700),
        darkest: map-get(map-get($colors, red), 900)
    ),
    redorange: (
        dashboard: #ff7043,
        lightdash: #ff7043,
        darkdash: #c63f17,
        text: #ffddc1,
        lightest: map-get(map-get($colors, redorange), 100),
        lighter: map-get(map-get($colors, redorange), 200),
        light: map-get(map-get($colors, redorange), 400),
        base: map-get(map-get($colors, redorange), 500),
        dark: map-get(map-get($colors, redorange), 600),
        darker: map-get(map-get($colors, redorange), 700),
        darkest: map-get(map-get($colors, redorange), 900)
    ),
    orange: (
        lightest: map-get(map-get($colors, orange), 100),
        lighter: map-get(map-get($colors, orange), 200),
        light: map-get(map-get($colors, orange), 400),
        base: map-get(map-get($colors, orange), 500),
        dark: map-get(map-get($colors, orange), 600),
        darker: map-get(map-get($colors, orange), 700),
        darkest: map-get(map-get($colors, orange), 900)
    ),
    yellow: (
        lightest: map-get(map-get($colors, yellow), 100),
        lighter: map-get(map-get($colors, yellow), 200),
        light: map-get(map-get($colors, yellow), 400),
        base: map-get(map-get($colors, yellow), 500),
        dark: map-get(map-get($colors, yellow), 600),
        darker: map-get(map-get($colors, yellow), 700),
        darkest: map-get(map-get($colors, yellow), 900)
    ),
    green: (
        dashboard: #BFC932,
        lightdash: #F4FC66,
        darkdash: #8B9800,
        text: #F3FAFB,
        lightest: map-get(map-get($colors, green), 100),
        lighter: map-get(map-get($colors, green), 200),
        light: map-get(map-get($colors, green), 400),
        base: map-get(map-get($colors, green), 500),
        dark: map-get(map-get($colors, green), 600),
        darker: map-get(map-get($colors, green), 700),
        darkest: map-get(map-get($colors, green), 900)
    ),
    blue: (
        lightest: map-get(map-get($colors, ming), 25),
        lighter: map-get(map-get($colors, ming), 150),
        light: map-get(map-get($colors, ming), 400),
        base: map-get(map-get($colors, ming), 400),
        dark: map-get(map-get($colors, ming), 450),
        darker: map-get(map-get($colors, ming), 800),
        darkest: map-get(map-get($colors, ming), 900)
    ),
    purple: (
        dashboard: #B29CDA,
        lightdash: #E5CDFF,
        darkdash: #826EA8,
        text: #F8F8FD,
        lightest: map-get(map-get($colors, purple), 50),
        lighter: map-get(map-get($colors, purple), 100),
        light: map-get(map-get($colors, purple), 200),
        base: map-get(map-get($colors, purple), 300),
        dark: map-get(map-get($colors, purple), 600),
        darker: map-get(map-get($colors, purple), 700),
        darkest: map-get(map-get($colors, purple), 900)
    ),
    opaque: (
        light: map-get(map-get($colors, opaque), 700),
        lighter: map-get(map-get($colors, opaque), 500),
        lightest: map-get(map-get($colors, opaque), 300)
    ),
    black: black,
    white: white,

    midnight: (
        lightest: map-get(map-get($colors, gray), 250),
        lighter: map-get(map-get($colors, gray), 400),
        light: map-get(map-get($colors, gray), 700),
        base: map-get(map-get($colors, slate), 900),
        dark: map-get(map-get($colors, charcoal), 850),
        darker: map-get($colors, black),
        darkest: map-get($colors, black)
    ),
    slate: (
        lightest: map-get(map-get($colors, slate), 50),
        lighter: map-get(map-get($colors, slate), 100),
        light: map-get(map-get($colors, slate), 200),
        base: map-get(map-get($colors, slate), 350),
        dark: map-get(map-get($colors, slate), 500),
        darker: map-get(map-get($colors, slate), 800),
        darkest: map-get(map-get($colors, slate), 900)
    ),
    gray: (
        lightest: map-get(map-get($colors, gray), 25),
        lighter: map-get(map-get($colors, gray), 50),
        light: map-get(map-get($colors, gray), 100),
        base: map-get(map-get($colors, gray), 200),
        dark: map-get(map-get($colors, gray), 400),
        darker: map-get(map-get($colors, gray), 600),
        darkest: map-get(map-get($colors, gray), 950),
        border: map-get(map-get($colors, gray), 75)
    ),
    charcoal: (
        lightest: map-get(map-get($colors, charcoal), 700),
        lighter: map-get(map-get($colors, charcoal), 750),
        light: map-get(map-get($colors, charcoal), 800),
        base: map-get(map-get($colors, charcoal), 825),
        dark: map-get(map-get($colors, charcoal), 850),
        darker: map-get(map-get($colors, charcoal), 900),
        darkest: map-get($colors, black)
    )
);

@function color($color, $scale: 500) {
    $hue: null;

    @if (type-of($scale) == string) {
        @if map-has-key($colors-map, $color) {
            $hue: map-get($colors-map, $color);
        }

        @if (type-of($hue) == color) {
            @return map-get($colors-map, $color);
        }

        @if (type-of($hue) == map) {
            @if map-has-key($hue, $scale) {
                @return map-get($hue, $scale);
            }

            @warn 'Unknown scale `#{$scale}` in `#{$color}`.';
            @return null;
        }

        @warn 'Unknown `#{$color}`, `#{$scale}` in $colors.';
        @return null;
    }

    @if map-has-key($colors, $color) {
        $hue: map-get($colors, $color);

        @if (type-of($hue) == color) {
            @return map-get($colors, $color);
        }

        @if (type-of($hue) == map) {
            @if map-has-key($hue, $scale) {
                @return map-get($hue, $scale);
            }

            @warn 'Unknown value `#{$scale}` in `#{$color}`.';
            @return null;
        }
    }
    @else if map-has-key($colors-map, $color) {
        $hue: map-get($colors-map, $color);

        @if (type-of($hue) == color) {
            @return map-get($colors-map, $color);
        }

        @if (type-of($hue) == map) {
            @if map-has-key($hue, base) {
                @return map-get($hue, base);
            }

            @warn 'Unknown value base in `#{$color}`.';
            @return null;
        }
    }

    @warn 'Unknown `#{$color}` in $colors.';
    @return null;
}

@each $color, $scales in $colors {
    @each $scale, $hue in $scales {
        /* stylelint-disable-next-line selector-pseudo-class-no-unknown */
        :export {
            #{"" + $color}-#{"" + $scale}: $hue;
        }
    }
}

@mixin dark {
    @at-root .dark & {
        @content;
    }
}
